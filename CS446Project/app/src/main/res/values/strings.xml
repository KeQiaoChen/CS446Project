<?xml version="1.0" encoding="utf-8"?><!DOCTYPE resources [<!--The domain name, followed by a dot, must be appended at the beginning of the action name for
    any custom Intent that the app broadcasts.--><!ENTITY domain_name "com.example.qian.cs446project.">]>

<resources>
    <string name="app_name">CS 446 Project</string>
    <string name="title">Title: </string>
    <string name="artist">Artist: </string>
    <string name="album">Album: </string>
    <string name="time_placeholder">0:00</string>
    <string name="create_session">Create Session</string>
    <string name="join_session">Join Session</string>
    <string name="manage_playlist">Manage Playlist</string>
    <string name="end_session">End Session</string>
    <string name="leave_session">Leave Session</string>
    <string name="exit">Exit</string>
    <string name="join">Join</string>
    <!--Host's session playlist GUI (screen 6 of mockup) shows this string after all participants
    have finished downloading the song in the session playlist.-->
    <string name="ready_to_play">Ready to play</string>
    <!--Host's session playlist GUI (screen 6 of mockup) shows this string when a participant joins
    a session.-->
    <string name="wait_message">Please wait for new participants to download files.</string>
    <!--Name of any parcelable extra that is a Playlist object-->
    <string name="session_playlist">playlist</string>
    <!--String for the broadcasted Intent HostMusicPlayerActivity receives to indicate that a new
    participant has joined the session-->
    <string name="participant_joined">&domain_name;new_participant_joined</string>
    <!--String for the broadcasted Intent HostMusicPlayerActivity receives to indicate that all
    participants have finished downloading at least the 1st song in the session playlist-->
    <string name="all_participants_ready">&domain_name;all_participants_ready</string>
    <!--String for the broadcast Intent that indicates that the session playlist has transitioned
    from a playing state or paused state to a stopped state-->
    <string name="playlist_stopped">&domain_name;playlist_stopped</string>
    <!--String for the broadcast Intent that indicates that the session playlist has transitioned
    from a stopped state to a playing state-->
    <string name="playlist_not_stopped">&domain_name;playlist_not_stopped</string>
    <!--String for the Intent HostMusicPlayerActivity broadcasts to tell other components that the
    host has pressed Play on the session playlist-->
    <string name="send_play">&domain_name;send_play</string>
    <!--String for the Intent HostMusicPlayerActivity broadcasts to tell other components that the
    host has paused the session playlist-->
    <string name="send_pause">&domain_name;send_pause</string>
    <!--String for the Intent HostMusicPlayerActivity broadcasts to tell other components that the
    host has stopped the session playlist-->
    <string name="send_stop">&domain_name;send_stop</string>
    <!--String for the broadcasted Intent to indicate to the receiving component that it should play
    the session playlist-->
    <string name="receive_play">&domain_name;receive_play</string>
    <!--String for the broadcasted Intent to indicate to the receiving component that it should
    pause the session playlist-->
    <string name="receive_pause">&domain_name;receive_pause</string>
    <!--String for the broadcasted Intent to indicate to the receiving component that it should stop
    the session playlist-->
    <string name="receive_stop">&domain_name;receive_stop</string>
    <!--String for the broadcasted Intent ParticipantMusicPlayer receives to indicate that
    the 1st song in the session playlist has finished downloading onto the participant's device-->
    <string name="song_finished_downloading">&domain_name;song_finished_downloading</string>
    <!--Name of the Intent ParticipantMusicPlayerActivity broadcasts to tell other components
    the user has joined a session and is requesting the session playlist.-->
    <string name="user_chose_session">&domain_name;user_chose_session</string>
    <!--Name of the extra that the user_chose_session Intent contains. This extra is the name of the
    session that the user has chosen to join.-->
    <string name="name_of_chosen_session">name_of_chosen_session</string>
    <!--Name of the parcelable extra that is the list of sessions used when creating an instance of
    ChooseSessionActivity-->
    <string name="session_list">session_list</string>
    <!--Participant's session playlist GUI (screen 3 of mockup) shows this string before the app
    loads the metadata of the songs in the playlist.-->
    <string name="waiting_for_songs">Loading songs...</string>
    <!--Name of the broadcasted Intent ParticipantMusicPlayerActivity receives that contains the
    Playlist object with the metadata for all songs in the session playlist-->
    <string name="playlist_ready">&domain_name;playlist_ready</string>
    <!--Name of the broadcasted Intent ChooseSessionActivity receives that contains the ArrayList
    of Strings, which lists the name of every session that the user can join.-->
    <string name="session_list_ready">&domain_name;session_list_ready</string>
    <!--Name of the extra that the session_list_ready Intent contains that is the ArrayList of
    Strings, listing the name of every session that the user can join.-->
    <string name="session_names_list">session_names_list</string>
    <!--The GUI that lists all sessions a user can join (screen 2 of mockup) shows this string
    before ChooseSessionActivity receives the list of session names.-->
    <string name="waiting_for_session_names">Retrieving sessions...</string>
    <!--Name of the Intent ChooseSessionActivity broadcasts to tell other components that a user is
    looking for a session to join-->
    <string name="user_looking_to_join_session">&domain_name;user_looking_to_join_session</string>
    <!--Name of the extra in the targeted Intent that ChooseSessionActivity sends to
    ParticipantMusicPlayerActivity. This extra is a String that is the name of the session the
    user has chosen to join.-->
    <string name="session_name">session_name</string>
    <!--Name of the Intent HostMusicPlayer broadcasts that contains the session playlist-->
    <string name="return_session_playlist">&domain_name;return_session_playlist</string>
    <string name="start_session">Start Session</string>
    <string name="enter_session_name">Enter Session Name</string>
    <string name="select_playlist_to_upload_to_session">Select Playlist to Upload to Session:</string>
    <string name="select_songs_to_upload_to_playlist">Select Songs to Upload to Playlist:</string>
    <string name="new_playlist">New Playlist</string>
    <string name="create_playlist">Create Playlist</string>
    <string name="enter_playlist_name">Enter Playlist Name</string>
    <!--Name of an extra in the targeted Intent that CreateSessionActivity sends to
    ParticipantMusicPlayerActivity. This extra is a String that is the name of the session the
    user created.-->
    <string name="created_session_name">created_session_name</string>
    <!--Name of the Intent HostMusicPlayer broadcasts to indicate that a song in the session
    playlist has finished-->
    <string name="song_completed">&domain_name;song_completed</string>
    <!--Name of the extra that the song_completed Intent contains that is the index of the song that
    should play next in the session playlist, with the index of the first song being 0-->
    <string name="current_song_index">current_song_index</string>
    <!--Name of the Intent HostMusicPlayerActivity broadcasts to indicate that it has been started
     -->
    <string name="host_music_player_activity_started">&domain_name;host_music_player_activity_started</string>
    <!--Name of the Intent ParticipantMusicPlayerActivity broadcasts to indicate that it has been
    started and has the session playlist-->
    <string name="participant_music_player_activity_started">&domain_name;participant_music_player_activity_started</string>
    <!--Name of the Intent SynchronicityMusicPlayerActivity broadcasts to indicate that the playlist
    is to be played. If the user is the host, this Intent is broadcast when the user presses the
    play button. If the user is a participant, this Intent is broadcast when the user's phone
    receives a play signal.-->
    <string name="play">&domain_name;play</string>
    <!--Name of the Intent HostMusicPlayer broadcasts to indicate that the host's GUI must update to
    reflect the fact that the playlist is playing-->
    <string name="playing_update_GUI">&domain_name;playing_update_GUI</string>
    <!--Name of the Intent SynchronicityMusicPlayerActivity broadcasts to indicate that the playlist
    is to be paused. If the user is the host, this Intent is broadcast when the user presses the
    pause button. If the user is a participant, this Intent is broadcast when the user's phone
    receives a pause signal.-->
    <string name="pause">&domain_name;pause</string>
    <!--Name of the Intent HostMusicPlayer broadcasts to indicate that the host's GUI must update to
    reflect the fact that the playlist is paused-->
    <string name="paused_update_GUI">&domain_name;paused_update_GUI</string>
    <!--Name of the Intent SynchronicityMusicPlayerActivity broadcasts to indicate that the playlist
    is to be stopped. If the user is the host, this Intent is broadcast when the user presses the
    stop button. If the user is a participant, this Intent is broadcast when the user's phone
    receives a stop signal.-->
    <string name="stop">&domain_name;stop</string>
    <!--Name of the Intent HostMusicPlayer broadcasts to indicate that the host's GUI must update to
    reflect the fact that the playlist is stopped-->
    <string name="stopped_update_GUI">&domain_name;stopped_update_GUI</string>
    <!--Name of the Intent SynchronicityMusicPlayerActivity broadcasts to indicate that the playlist
    is to be muted on the user's phone.-->
    <string name="mute">&domain_name;mute</string>
    <!--Name of the Intent SynchronicityMusicPlayer broadcasts to indicate that the GUI must update
    to reflect the fact that the user has muted the playlist-->
    <string name="muted_update_GUI">&domain_name;muted_update_GUI</string>
    <!--Name of the Intent SynchronicityMusicPlayerActivity broadcasts to indicate that the playlist
    is to be unmuted on the user's phone.-->
    <string name="unmute">&domain_name;unmute</string>
    <!--Name of the Intent SynchronicityMusicPlayer broadcasts to indicate that the GUI must update
    to reflect the fact that the user has unmuted the playlist-->
    <string name="unmuted_update_GUI">&domain_name;unmuted_update_GUI</string>
    <!--Name of the Intent SynchronicityMusicPlayer broadcasts to indicate that the progress bar,
    elapsed time, and remaining time shown in the GUI for the currently playing song must be
    updated-->
    <string name="update_song_progress">&domain_name;update_song_progress</string>
    <!--Name of the extra that the update_song_progress Intent contains that is the index of the
    currently playing song in the session playlist, with the index of the first song being 0-->
    <string name="currently_playing_song_index">currently_playing_song_index</string>
    <!--Name of the extra that the update_song_progress Intent contains that is the position of the
    currently playing song in the session playlist (i.e. the amount of time, in milliseconds, that
    the song has played for-->
    <string name="current_position">current_position</string>
    <!--Name of the Intent SynchronicityMusicPlayer broadcasts to indicate that it is now the other
     group's turn to play the playlist-->
    <string name="other_group_plays">&domain_name;other_group_plays</string>
    <!--Name of the Intent SynchronicityMusicPlayer broadcasts to indicate that it is now the user's
     group's turn to play the playlist-->
    <string name="this_group_plays">&domain_name;this_group_plays</string>
    <!--Name of the Intent received by PlaylistManager as a request to publish all device songs-->
    <string name="list_all_device_songs">&domain_name;list_all_device_songs</string>
    <!--Name of the Intent published by PlaylistManager with all device songs-->
    <string name="all_device_songs">&domain_name;all_device_songs</string>
    <!--Name of the Intent received by PlaylistManager as a request to publish app playlists-->
    <string name="list_all_app_playlists">&domain_name;list_all_app_playlists</string>
    <!--Name of the Intent published by PlaylistManager with all app playlists-->
    <string name="all_app_playlists">&domain_name;all_app_playlists</string>
    <!--Name of the Intent received by PlaylistManager as a request to publish playlist songs-->
    <string name="list_all_playlist_songs">&domain_name;list_all_playlist_songs</string>
    <!--Name of the Intent published by PlaylistManager with all playlist songs-->
    <string name="all_playlist_songs">&domain_name;all_playlist_songs</string>
    <!--Name of the Intent received by PlaylistManager as a request to create a new playlist-->
    <string name="create_new_playlist">&domain_name;create_new_playlist</string>
    <!--Name of the Intent published by PlaylistManager which indicates successful playlist creation-->
    <string name="new_playlist_created">&domain_name;new_playlist_created</string>
    <!--Name of the Intent received by PlaylistManager as a request to add a song to a playlist-->
    <string name="add_song_to_playlist">&domain_name;add_song_to_playlist</string>
    <!--Name of the Intent published by PlaylistManager which indicates successful addition of song to playlist-->
    <string name="song_added_to_playlist">&domain_name;song_added_to_playlist</string>
    <!--Name of the extra for a playlist sent in the Intent received by PlaylistManager-->
    <string name="extra_name_playlist">playlist</string>
    <!--Name of the extra for playlists sent in the Intent published by PlaylistManager-->
    <string name="extra_name_arraylist_playlist">arraylist_playlist</string>
    <!--Name of the extra for a song sent in the Intent received by PlaylistManager-->
    <string name="extra_name_song">song</string>
    <!--Name of the extra for songs sent in the Intent published by PlaylistManager-->
    <string name="extra_name_arraylist_song">arraylist_song</string>
    <!--Name of the extra for songs sent in the Intent published by PlaylistManager-->
    <string name="extra_name_linkedlist_song">linkedlist_song</string>
    <!--Name of the extra for a playlist name sent in the Intent received by PlaylistManager-->
    <string name="extra_name_playlist_name">playlistName</string>
    <!--Name of the extra for a boolean value sent in the Intent published by PlaylistManager-->
    <string name="extra_name_success">success</string>

    <!-- Andrew's constants for ConnectionManager + sub-modules -->
    <string name="create_session_message">&domain_name;create_session_message</string>
    <string name="join_session_message">&domain_name;join_session_message</string>
    <string name="find_session_message">&domain_name;find_session_message</string>
    <string name="find_session_return">&domain_name;find_session_return</string>
    <string name="session_name_key">&domain_name;session_name_key</string>
    <string name="available_sessions_key">&domain_name;available_sessions_key</string>

</resources>
